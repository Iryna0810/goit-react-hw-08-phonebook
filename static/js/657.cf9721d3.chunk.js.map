{"version":3,"file":"static/js/657.cf9721d3.chunk.js","mappings":"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","sources":["components/styled.js","components/Form/Form.jsx","components/Title/Title.jsx","components/Loader/Loader.jsx","components/Contacts/Contacts.jsx","components/Filtter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 15px;\n  list-style-type: none;\n  margin: 0 auto;\n  padding: 0;\n  margin-top: 20px;\n`;\nexport const FormWrapper = styled.form`\n  margin: 0 auto;\n  padding: 10px;\n  gap: 20px;\n  width: 100%;\n\n\n`;\n\nexport const Button = styled.button`\n    display: block;\n    width: auto;\n    text-align: center;\n    vertical-align: middle;\n    padding: 12px 24px;\n    margin: 0 auto;\n    margin-bottom: 30px;\n    margin-top: 30px;\n    border: 1px solid #131468;\n    border-radius: 8px;\n    background: #3537ff;\n    background: -webkit-gradient(linear, left top, left bottom, from(#3537ff), to(#131468));\n    background: -moz-linear-gradient(top, #3537ff, #131468);\n    background: linear-gradient(to bottom, #3537ff, #131468);\n    -webkit-box-shadow: #4042ff 0px 0px 40px 0px;\n    -moz-box-shadow: #4042ff 0px 0px 40px 0px;\n    box-shadow: #4042ff 0px 0px 40px 0px;\n    text-shadow: #0b0b3a 1px 1px 1px;\n    font: normal normal bold 20px comic sans ms;\n    color: #ffffff;\n    cursor: pointer;\n    text-decoration: none;`;\n\nexport const Input = styled.input`\ndisplay: block;\n margin: 0 auto;\n  align-items: center;\n  justify-content: center;\n  background-color: #d4bfd3;\n  color: #50174c;\n  font-weight: 100;\n  border: 1px solid #d4bfd3;\n  height: 50px;\n  width: auto;\n  font-size: 20px;\n  border-radius: 4px;\n  padding: 0 20px;\n  transition: 300ms;\n  cursor: pointer;\n  ::placeholder {\n    color:#50174c;\n  }\n`;\n","import {useState} from 'react';\nimport { Input } from '../styled';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {addContactsThunk} from 'components/redux/thunk'\nimport { selectContacts } from '../redux/selectors';\nimport { FormLabel, Button, VStack } from '@chakra-ui/react';\n\n\nexport const Form = () => {\n\n  const contacts = useSelector(selectContacts);\n  \n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contact = {\n    name: name,\n    phone: phone,\n  };\n\n  const dispatch = useDispatch();\n    \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const normalizedName = name.toLowerCase();\n    const nameCheck = contacts.filter(contact => contact.name.toLowerCase() === normalizedName);\n\n    if (nameCheck.length >= 1) {\n      return alert(`${name} is already in contacts`)\n    }\n\n    dispatch(addContactsThunk(contact))\n    reset();\n  }\n\n  const handleInputChange = ({ target: { value, name } }) => {\n    if (name === 'name') setName(value)\n    if (name === 'phone') setPhone(value)\n  }\n\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  }\n\n  return <VStack\n    w=\"full\"\n    h=\"full\"\n    p={10}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    action=\"\" onSubmit={handleSubmit}>\n    <FormLabel>Name\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        placeholder=\"type your name\"\n        autoComplete=\"off\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleInputChange}>\n      </Input>\n    </FormLabel>\n    <FormLabel>Phone\n      <Input\n        type=\"tel\"\n        name=\"phone\"\n        value={phone}\n        placeholder=\"type your phone\"\n        autoComplete=\"off\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleInputChange}>\n        </Input>\n    </FormLabel>\n    <Button bgColor=\"blue.100\" type=\"submit\">Add contacts</Button>\n  </VStack>\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading } from '@chakra-ui/react';\n\nexport const Title = ({ title }) => (\n  <Heading size=\"2xl\">{title}</Heading>\n);\n\nTitle.propTypes = { title: PropTypes.string.isRequired, };","import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (  <Vortex\n                    visible={true}\n                    height=\"280\"\n                    width=\"280\"\n                    ariaLabel=\"vortex-loading\"\n                    wrapperStyle={{}}\n                    wrapperClass=\"vortex-wrapper\"\n                    colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n                />\n                \n    )\n}\nexport default Loader","import React, { useEffect } from 'react';\nimport { Button, Flex, Text, VStack} from \"@chakra-ui/react\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectVisibleContacts, selectIsLoading, selectError} from '../redux/selectors'\nimport { getContactsThunk, deleteContactsThunk } from 'components/redux/thunk';\nimport Loader from 'components/Loader/Loader'\n\nexport const Contacts = () => {\n    const visibleContacts = useSelector(selectVisibleContacts)\n    const loading = useSelector(selectIsLoading)\n    const error = useSelector(selectError)\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(getContactsThunk())\n    }, [dispatch])\n   \n\n    const handleDelete = (id) => {\n        dispatch(deleteContactsThunk(id))\n    };\n   \n\n    // eslint-disable-next-line no-lone-blocks\n    {\n        return <>\n            {loading && <Loader />}\n            {error && <p>Something went wrong. Try again later</p>}\n            <VStack\n            w=\"full\"\n                            h=\"full\" p={10}\n                            spacing={10}\n                            alignItems=\"center\"\n            > {visibleContacts &&\n                visibleContacts.map(({ name, id, phone }) =>\n            <Flex justifyContent=\"space-between\" gap=\"auto\" p=\"2\" border =\"1px solid blue\" borderRadius=\"3xl\" key={id}>\n            <Text>{name}</Text>\n            <Text>{phone}</Text>\n            <Button bgColor=\"blue.100\" type=\"submit\"\n                onClick={() => handleDelete(id)}\n            >Delete</Button>\n        </Flex>)}\n            </VStack>\n            </>\n    }\n}\n\n","import React from 'react';\nimport { Input } from '../styled';\nimport { useDispatch} from 'react-redux';\nimport { setFilter } from '../redux/filterSlice';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n  \n    const handleChangeFilter = (event) => {  \n        dispatch(setFilter(event.target.value));\n    }\n    return <label>Find contacts by name\n            <Input type='text'\n                onChange={handleChangeFilter}\n                name=\"filter\"\n                autoComplete=\"off\">\n            </Input>\n        </label>\n};","import { Form } from \"../components/Form/Form\";\nimport { Title } from '../components/Title/Title';\nimport { Contacts } from \"../components/Contacts/Contacts\";\nimport { Filter } from \"../components/Filtter/Filter\";\nimport { Container, VStack } from \"@chakra-ui/react\"\n\n\nconst ContactsList = () => {\n   \n    return (\n        <Container p={10} >\n                <VStack w=\"full\"\n                    h=\"full\" p={10}\n                    spacing={10}\n                    alignItems=\"center\"\n                    bg=\"blue.50\"\n                >\n                    <Title title='Phonebook'></Title>\n                    <Form />\n                    <Title title=\"Contacts\"></Title>\n                    <Filter />\n                    <Contacts />\n                </VStack>            \n        </Container>\n    )\n};\n\nexport default ContactsList"],"names":["FormWrapper","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Input","_templateObject3","_templateObject4","Form","contacts","useSelector","selectContacts","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","contact","dispatch","useDispatch","handleInputChange","_ref","_ref$target","target","value","reset","_jsxs","VStack","w","h","p","alignItems","justifyContent","action","onSubmit","e","preventDefault","normalizedName","toLowerCase","nameCheck","filter","length","alert","concat","addContactsThunk","children","FormLabel","_jsx","type","placeholder","autoComplete","pattern","title","required","onChange","Button","bgColor","Title","Heading","size","Vortex","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Contacts","visibleContacts","selectVisibleContacts","loading","selectIsLoading","error","selectError","useEffect","getContactsThunk","_Fragment","Loader","spacing","map","id","Flex","gap","border","borderRadius","Text","onClick","deleteContactsThunk","handleDelete","Filter","event","setFilter","Container","bg"],"sourceRoot":""}